#!/bin/bash

LOGFILE=/var/log/pgpool/pgpool.log
if [ ! -f $LOGFILE ] ; then
 > $LOGFILE
fi

# Special values:
#   %d = node id
#   %h = host name
#   %p = port number
#   %D = database cluster path
#   %m = new master node id
#   %H = hostname of the new master node
#   %M = old master node id
#   %P = old primary node id
#   %r = new master port number
#   %R = new master database cluster path

FALLING_NODE=$1            # %d
FALLING_HOST=$2            # %h
FALLING_PORT_NUMBER=$3     # %p
FALLING_CLUSTER_PATH=$4    # %D
NEW_MASTER_ID=$5           # %m
NEW_HOST=$6                # %H
OLD_MASTER_ID=$7           # %M
OLD_PRIMARY_ID=$8          # %P
NEW_PORT=$9                # %r
NEW_CLUSTER_PATH=$10       # %R

SSH_ARGS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
PGVERSION={{ pgpool_postgresql_version }}

# ex input : 0 pgsql01 5432 /var/lib/postgresql/11/main 1 pgsql02 0 0 5432 /var/lib/postgresql/11/main

(
date
echo "FALLING_NODE: $FALLING_NODE"
echo "FALLING_HOST: $FALLING_HOST"
echo "FALLING_PORT_NUMBER: $FALLING_PORT_NUMBER"
echo "FALLING_CLUSTER_PATH: $FALLING_CLUSTER_PATH"
echo "NEW_MASTER_ID: $NEW_MASTER_ID"
echo "NEW_HOST: $NEW_HOST"
echo "OLD_MASTER_ID: $OLD_MASTER_ID"
echo "OLD_PRIMARY_ID: $OLD_PRIMARY_ID"
echo "NEW_PORT: $NEW_PORT"
echo "NEW_CLUSTER_PATH: $NEW_CLUSTER_PATH"

set -x

if [ $FALLING_NODE = $OLD_PRIMARY_ID ] ; then
  echo "Promoting ${NEW_HOST} to primary"
  ssh ${SSH_ARGS} ${NEW_HOST} "/usr/bin/repmgr standby promote -f /etc/repmgr.conf --log-to-file -v"
else
  echo "old primary id is ${OLD_PRIMARY_ID} and falling node is ${FALLING_NODE}"
fi
exit 0;
) 2>&1 | tee -a ${LOGFILE}
